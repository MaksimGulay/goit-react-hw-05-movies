{"version":3,"file":"static/js/597.8029a965.chunk.js","mappings":"+SAEaA,EAAU,CACrBC,OAAQ,MACRC,IAAK,kDACLC,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAyB,SAAAC,GACpC,MAAO,CACLR,OAAQ,MACRC,IAAI,sCAAD,OAAwCO,GAC3CN,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,8NAGP,EAEYG,EAAS,mCAAG,WAAMC,GAAN,gGAEEC,EAAAA,EAAAA,IACrB,4CACA,CACET,OAAQ,CACNU,eAAe,EACfT,SAAU,QACVO,MAAOA,GAETN,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAba,cAEfO,EAFe,yBAiBdA,EAASC,KAAKC,SAjBA,sCAmBrBC,QAAQC,MAAM,yBAAd,MAnBqB,8DAAH,sDAwBTC,EAAU,SAAAV,GACrB,MAAO,CACLR,OAAQ,MACRC,IAAI,sCAAD,OAAwCO,EAAxC,YACHN,OAAQ,CAAEC,SAAU,QAASgB,KAAM,KACnCf,QAAS,CACPC,OAAQ,mBACRC,cACE,8NAGP,EAEYc,EAAa,SAAAZ,GACxB,MAAO,CACLR,OAAQ,MACRC,IAAI,sCAAD,OAAwCO,EAAxC,YACHN,OAAQ,CAAEC,SAAU,QAASgB,KAAM,KACnCf,QAAS,CACPC,OAAQ,mBACRC,cACE,8NAGP,C,kHC1BD,UA3CgB,WACd,OAA0Be,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QAkBR,OAhBAmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAETC,GAASX,EAAAA,EAAAA,IAAQV,GAFR,SAGQG,EAAAA,EAAAA,QAAckB,GAHtB,OAGThB,EAHS,OAIfU,EAASV,EAASC,KAAKgB,MACvBL,GAAW,GALI,gDAOfT,QAAQC,MAAM,wBAAd,MACAQ,GAAW,GARI,yDAAH,qDAYhBG,GACD,GAAE,CAACpB,KAGF,4BACE,kCACCgB,GACC,+CAEA,wBACGF,EAAMS,OAAS,EACdT,EAAMU,KAAI,SAAAF,GAAI,OACZ,yBACE,uBAAIA,EAAKG,QADFH,EAAKI,GADF,KAMd,+DAMX,C","sources":["api.js","components/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const options = {\n  method: 'GET',\n  url: 'https://api.themoviedb.org/3/trending/movie/day',\n  params: { language: 'en-US' },\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwODA3ZDJhN2IzNjZjOGRkMjBiM2UxN2IxMDQ5NTAyOSIsInN1YiI6IjY0ZmYzOTczZWZlYTdhMDExYWI3N2E5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WfuiyWNSMnK0XUfRzXRBAAegiGGslDwG9EegGgPDSdI',\n  },\n};\n\nexport const getMovieDetailsOptions = movieId => {\n  return {\n    method: 'GET',\n    url: `https://api.themoviedb.org/3/movie/${movieId}`,\n    params: { language: 'en-US' },\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwODA3ZDJhN2IzNjZjOGRkMjBiM2UxN2IxMDQ5NTAyOSIsInN1YiI6IjY0ZmYzOTczZWZlYTdhMDExYWI3N2E5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WfuiyWNSMnK0XUfRzXRBAAegiGGslDwG9EegGgPDSdI',\n    },\n  };\n};\n\nexport const getMovies = async query => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/search/movie',\n      {\n        params: {\n          include_adult: false,\n          language: 'en-US',\n          query: query,\n        },\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwODA3ZDJhN2IzNjZjOGRkMjBiM2UxN2IxMDQ5NTAyOSIsInN1YiI6IjY0ZmYzOTczZWZlYTdhMDExYWI3N2E5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WfuiyWNSMnK0XUfRzXRBAAegiGGslDwG9EegGgPDSdI',\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n\nexport const getCast = movieId => {\n  return {\n    method: 'GET',\n    url: `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    params: { language: 'en-US', page: '1' },\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwODA3ZDJhN2IzNjZjOGRkMjBiM2UxN2IxMDQ5NTAyOSIsInN1YiI6IjY0ZmYzOTczZWZlYTdhMDExYWI3N2E5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WfuiyWNSMnK0XUfRzXRBAAegiGGslDwG9EegGgPDSdI',\n    },\n  };\n};\n\nexport const getReviews = movieId => {\n  return {\n    method: 'GET',\n    url: `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    params: { language: 'en-US', page: '1' },\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwODA3ZDJhN2IzNjZjOGRkMjBiM2UxN2IxMDQ5NTAyOSIsInN1YiI6IjY0ZmYzOTczZWZlYTdhMDExYWI3N2E5OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WfuiyWNSMnK0XUfRzXRBAAegiGGslDwG9EegGgPDSdI',\n    },\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getCast } from 'api';\nimport { useParams } from 'react-router-dom';\n\nconst CastNew = () => {\n  const [casts, setCasts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCasts = async () => {\n      try {\n        const result = getCast(movieId);\n        const response = await axios.request(result);\n        setCasts(response.data.cast);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching casts:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchCasts();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Casts</h2>\n      {loading ? (\n        <div>Loading casts...</div>\n      ) : (\n        <ul>\n          {casts.length > 0 ? (\n            casts.map(cast => (\n              <li key={cast.id}>\n                <p>{cast.name}</p>\n              </li>\n            ))\n          ) : (\n            <div>No cast information available</div>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default CastNew;"],"names":["options","method","url","params","language","headers","accept","Authorization","getMovieDetailsOptions","movieId","getMovies","query","axios","include_adult","response","data","results","console","error","getCast","page","getReviews","useState","casts","setCasts","loading","setLoading","useParams","useEffect","fetchCasts","result","cast","length","map","name","id"],"sourceRoot":""}